apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      release: "{{ .Release.Name }}"
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/wp-json/metrics'
        prometheus.io/port: '80'
    spec:
      serviceAccountName: {{ template "fullname" . }}-sa
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      containers:
      - name: {{ template "fullname" . }}
        image: {{ template "wordpress.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: WP_K8S_PLUGIN_DEPLOYMENT_NAME
          value: {{ template "fullname" . }}
        - name: ALLOW_EMPTY_PASSWORD
        {{- if .Values.allowEmptyPassword }}
          value: "yes"
        {{- else }}
          value: "no"
        {{- end }}
        - name: MARIADB_HOST
        {{- if .Values.mariadb.enabled }}
          value: {{ template "mariadb.fullname" . }}
        {{- else if .Values.mysql.enabled }}
          value: {{ template "mysql.fullname" . }}
        {{- else }}
          value: {{ .Values.externalDatabase.host | quote }}
        {{- end }}
        - name: MARIADB_PORT_NUMBER
        {{- if or .Values.mariadb.enabled .Values.mysql.enabled }}
          value: "3306"
        {{- else }}
          value: {{ .Values.externalDatabase.port | quote }}
        {{- end }}
        - name: WORDPRESS_DATABASE_NAME
        {{- if .Values.mariadb.enabled }}
          value: {{ .Values.mariadb.db.name | quote }}
        {{- else if .Values.mysql.enabled }}
          value: {{ .Values.mysql.db.name | quote }}
        {{- else }}
          value: {{ .Values.externalDatabase.database | quote }}
        {{- end }}
        - name: WORDPRESS_DATABASE_USER
        {{- if .Values.mariadb.enabled }}
          value: {{ .Values.mariadb.db.user | quote }}
        {{- else if .Values.mysql.enabled }}
          value: {{ .Values.mysql.db.user | quote }}
        {{- else }}
          value: {{ .Values.externalDatabase.user | quote }}
        {{- end }}
        - name: WORDPRESS_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
            {{- if .Values.mariadb.enabled }}
              name: {{ template "mariadb.fullname" . }}
              key: mariadb-password
            {{- else if .Values.mysql.enabled }}
              name: {{ template "mysql.fullname" . }}
              key: mysql-password
            {{- else }}
              name: {{ printf "%s-%s" .Release.Name "externaldb" }}
              key: db-password
            {{- end }}
        - name: WORDPRESS_USERNAME
          value: {{ .Values.wordpressUsername | quote }}
        - name: WORDPRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: wordpress-password
        - name: WORDPRESS_EMAIL
          value: {{ .Values.wordpressEmail | quote }}
        - name: WORDPRESS_FIRST_NAME
          value: {{ .Values.wordpressFirstName | quote }}
        - name: WORDPRESS_LAST_NAME
          value: {{ .Values.wordpressLastName | quote }}
        - name: WORDPRESS_BLOG_NAME
          value: {{ .Values.wordpressBlogName | quote }}
        - name: WORDPRESS_TABLE_PREFIX
          value: {{ .Values.wordpressTablePrefix | quote }}
        - name: SMTP_HOST
          value: {{ .Values.smtpHost | quote }}
        - name: SMTP_PORT
          value: {{ .Values.smtpPort | quote }}
        - name: SMTP_USER
          value: {{ .Values.smtpUser | quote }}
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: smtp-password
        - name: SMTP_USERNAME
          value: {{ .Values.smtpUsername | quote }}
        - name: SMTP_PROTOCOL
          value: {{ .Values.smtpProtocol | quote }}
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        livenessProbe:
          httpGet:
            path: /wp-login.php
          {{- if not .Values.healthcheckHttps }}
            port: http
          {{- else }}
            port: https
            scheme: HTTPS
          {{- end }}
{{ toYaml .Values.livenessProbe | indent 10 }}
        readinessProbe:
          httpGet:
            path: /wp-login.php
          {{- if not .Values.healthcheckHttps }}
            port: http
          {{- else }}
            port: https
            scheme: HTTPS
          {{- end }}
{{ toYaml .Values.readinessProbe | indent 10 }}
        lifecycle:
          postStart:
            exec:
              command:
              - "/bin/sh"
              - "-c"
              - |
                apt-get update && apt-get install -q unzip;
                until $(curl --output /dev/null --silent --head --fail http://localhost/wp-login.php); do
                  echo 'Wordpress not ready...';
                  sleep 5;
                done;

                echo 'Installing plugins...';
                curl -s -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar;
                chmod +x wp-cli.phar;
                mv wp-cli.phar /usr/local/bin/wp;
                ln -s /opt/bitnami/php/bin/php /usr/bin/php;
                sed -i "/remove x-pingback HTTP header/a if ( !defined( 'WP_CLI' ) ) {" /opt/bitnami/wordpress/wp-config.php;
                echo "}" >> /opt/bitnami/wordpress/wp-config.php;

                {{- if .Values.externalPlugins.enabled }}
                {{- range $plugin_name:=.Values.externalPlugins.list }}
                echo "Installing {{ $plugin_name }}...";
                sudo -u bitnami -i -- wp plugin install --path=/opt/bitnami/wordpress {{ $plugin_name }};
                {{- end }}
                {{- end }}
                {{- if .Values.externalPlugins.activate }}
                {{- range $plugin_name:=.Values.externalPlugins.list }}
                sudo -u bitnami -i -- wp plugin activate --path=/opt/bitnami/wordpress {{ $plugin_name }};
                {{- end }}
                {{- end }}

                echo "Installing Salme's plugin...";
                cd /bitnami/wordpress/wp-content/plugins;
                rm -rf k8s-example-wp-plugin;
                curl -s -L https://github.com/javsalgar/k8s-example-wp-plugin/archive/master.zip -o ./k8s-example-wp-plugin.zip;
                unzip ./k8s-example-wp-plugin.zip;
                mv k8s-example-wp-plugin-master k8s-example-wp-plugin;
                sed -i 's|https://PUT_HERE_DNS_OF_API_SERVER:443|http://127.0.0.1:8080|g' k8s-example-wp-plugin/k8s_example_plugin.php;
                sed -i 's|PUT_HERE_API_PATH_TO_DEPLOYMENTS|apis/apps/v1/namespaces/{{ .Release.Namespace }}/deployments|g' k8s-example-wp-plugin/k8s_example_plugin.php;
                sed -i 's|PUT_HERE_THE_PATH_TO_THE_SERVICE_ACCOUNT_TOKEN_FILE|/var/run/secrets/kubernetes.io/serviceaccount/token|g' k8s-example-wp-plugin/k8s_example_plugin.php;
                rm k8s-example-wp-plugin.zip;
                sudo -u bitnami -i -- wp plugin activate --path=/opt/bitnami/wordpress k8s-example-wp-plugin

                echo "Installing Prometheus exporter...";
                cd /bitnami/wordpress/wp-content/plugins;
                rm -rf wordpress-exporter-prometheus;
                curl -s -L https://github.com/origama/wordpress-exporter-prometheus/archive/master.zip -o ./wordpress-exporter-prometheus.zip;
                unzip ./wordpress-exporter-prometheus.zip;
                mv wordpress-exporter-prometheus-master wordpress-exporter-prometheus;
                rm wordpress-exporter-prometheus.zip
                sudo -u bitnami -i -- wp plugin activate --path=/opt/bitnami/wordpress wordpress-exporter-prometheus
        volumeMounts:
        - mountPath: /bitnami/apache
          name: wordpress-data
          subPath: apache
        - mountPath: /bitnami/wordpress
          name: wordpress-data
          subPath: wordpress
        - mountPath: /bitnami/php
          name: wordpress-data
          subPath: php
        - mountPath: /opt/bitnami/apache/logs
          name: wordpress-apache-logs
        resources:
{{ toYaml .Values.resources | indent 10 }}
      - name: {{ template "fullname" . }}-helper
        image: lachlanevenson/k8s-kubectl:v1.12.2
        command:
        - "/bin/sh"
        - "-c"
        - |
          apk --no-cache add curl;
          until $(curl --output /dev/null --silent --head --fail http://localhost/wp-login.php); do
            echo 'Wordpress not ready...';
            sleep 5;
          done;

          echo "Opening an API proxy...";
          kubectl proxy --port 8080 &

          echo "Start printing Apache error log:";
          tail -f /bitnami/apache/logs/error_log;
        volumeMounts:
        - mountPath: /bitnami/wordpress
          name: wordpress-data
          subPath: wordpress
        - mountPath: /bitnami/apache/logs
          name: wordpress-apache-logs
      volumes:
      - name: wordpress-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{ end }}
      - name: wordpress-apache-logs
        emptyDir: {}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end -}}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
